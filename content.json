{"posts":[{"title":"Beginning","text":"博主大三上结束，时间充裕起来了，准备在寒假完成接下来的三篇论文就开始写点博客玩玩。 本博客会分享技术和生活方面的文章。由于我研究方向是密码学，并且目前国内密码学优质的文章确实太少，目前准备主要更新密码学相关的文章，希望能帮助到想要入门的大伙（光是入门就太难辣）。之后随着研究领域扩宽会加一些其他研究方向的分享。生活方面会有一些其他杂七杂八的内容，包括但不限于对去去过的饭店、酒吧、动漫的评价。","link":"/2022/12/14/2022.12.14%20Beginning/"},{"title":"去中心化身份和Web3","text":"最近在看去中心化身份（DID）和Web3，在这里写一篇笔记。说实话，这个领域目前还处于摸索阶段，真正落地的项目不多。刚接触的人对Web3.0的描述只能停留于加密货币、区块链、去中心化、数据所有权、反垄断等花里胡哨的关键词（蛮符合我对区块链的刻板印象的）。 Web3和DID的关联我认为，Web3就是为了解决一个issue：数据归于用户。比如用户在注册中心化平台账号时一般需要给平台提供手机号等身份信息，一些服务甚至还需要提供身份证进行实名认证，这导致了用户数据的主动权泄露给了服务器。在Web3，用户不需要将他们的数据存储到中心化平台，避免了自己数据资产被中心化实体控制的风险，自己享有数据的使用权。 DID的诞生和Web3类似，用户登录不同的中心化网站需要注册账户，不同网站的身份系统不互通。即使现在登录中心化网站可以使用联邦身份，支持使用微信、QQ账号进行第三方登录，但是第三方登陆后往往也需要用户输入手机号+验证码来注册。中心化身份想要让用户在网络空间中具有一种全局唯一的身份，用户在使用任何平台的服务时，用这种标识符来进行登录或者身份验证。 乍一看，两者的思想是非常相似的。Web3是想要数据归于用户，DID具体实现了身份信息归于用户，所以DID是Web3的一种实现。而DID可以解决Web3的身份验证问题，所以DID也是组成Web3的一种关键技术。Web3的数字钱包地址也可以整合到DID中从而标识钱包的所有权 DID从W3C的规范来谈，DID包含标识符和文档，标识符负责表示全局唯一的身份，文档包含和这个数字身份的相关的数据。平台通过DID对用户进行认证。如果平台需要认证用户额外的信息，比如用户的年龄，用户需要向政府部门请求关于年龄的可验证声明，政府部门向用户返回声明后，用户向平台发送声明，如果声明的验证通过并且DID的验证通过，则用户在该平台登录成功，或者说认证成功。 这里补充一下，用户的DID文档是存储在区块链上的 DID具体结构DID标识符是全局唯一表示身份的key，举个例子：did:eth:123456789abcdefg DID文档是用来存储和这个身份相关联的数据 ，目前一般使用JSON字符串，其中至少包含：DID标识符、公钥、支持的加密协议、服务的功能及其对应的URL，时间戳，证明DID合法的签名。一个符合W3C标准的基本DID文档如下所示 ： 1234567891011121314151617{ &quot;@context&quot;: &quot;https://w3id.org/did/v1&quot;, &quot;id&quot;: &quot;did:example:123456789abcdefghi&quot;, // DID标识符 &quot;authentication&quot;: [{ // 用于验证DID的参数 &quot;id&quot;: &quot;did:example:123456789abcdefghi#keys-1&quot;, &quot;type&quot;: &quot;RsaVerificationKey2018&quot;, &quot;controller&quot;: &quot;did:example:123456789abcdefghi&quot;, &quot;publicKeyPem&quot;: &quot;-----BEGIN PUBLIC KEY...END PUBLIC KEY-----\\r\\n&quot; }], &quot;service&quot;: [{ // 服务集合，下列服务用于返回和DID相关的可验证声明 &quot;id&quot;:&quot;did:example:123456789abcdefghi#vcs&quot;, &quot;type&quot;: &quot;VerifiableCredentialService&quot;, &quot;serviceEndpoint&quot;: &quot;https://example.com/vc/&quot; }]} 可以看到DID文档中并没有和真实身份相关联的信息。如果平台需要验证用户年龄、用户手机号等信息，单独靠DID是不能完成的，需要权威机构开具可验证声明。 可验证声明可验证声明系统是DID的一部分，本质上就是一个PKI体系。一个可验证声明系统有四个实体： 发行者（Issuer）：拥有用户数据，并且能够开局可验证声明 (Verifiable Credential, VC) 的实体，比如政府。 验证者（Inspector-Verifier, IV）：负责提供服务，但是在提供服务之前需要验证VC 持有者（Holder）：向Issuer请求VC的实体，它可以将开具的VC存到数字钱包中 标识符注册机构（Identifier Registry）：负责提供注册DID，维护DID服务的实体，如某条区块链 可以看到DID和VC其实是分开的。 当用户需要使用某个平台的服务，平台需要用户出示证明自己已满18岁。这时用户需要向Issuer请求对应的VC，Issuer返回VC后用户将VC存储在数字钱包中并发送给平台。平台对VC验证通过就允许用户使用服务。VC可以重复使用，只要VC还在有效期内，用户就可以一直使用VC来表明自己已满18岁。W3C提供的VC参考如下所示： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849{ // set the context, which establishes the special terms we will be using // such as 'issuer' and 'alumniOf'. &quot;@context&quot;: [ &quot;https://www.w3.org/2018/credentials/v1&quot;, &quot;https://www.w3.org/2018/credentials/examples/v1&quot; ], // specify the identifier for the credential &quot;id&quot;: &quot;http://example.edu/credentials/1872&quot;, // the credential types, which declare what data to expect in the credential &quot;type&quot;: [&quot;VerifiableCredential&quot;, &quot;AlumniCredential&quot;], // the entity that issued the credential &quot;issuer&quot;: &quot;https://example.edu/issuers/565049&quot;, // when the credential was issued &quot;issuanceDate&quot;: &quot;2010-01-01T19:73:24Z&quot;, // claims about the subjects of the credential &quot;credentialSubject&quot;: { // identifier for the only subject of the credential &quot;id&quot;: &quot;did:example:ebfeb1f712ebc6f1c276e12ec21&quot;, // assertion about the only subject of the credential &quot;alumniOf&quot;: { &quot;id&quot;: &quot;did:example:c276e12ec21ebfeb1f712ebc6f1&quot;, &quot;name&quot;: [{ &quot;value&quot;: &quot;Example University&quot;, &quot;lang&quot;: &quot;en&quot; }, { &quot;value&quot;: &quot;Exemple d'Université&quot;, &quot;lang&quot;: &quot;fr&quot; }] } }, // digital proof that makes the credential tamper-evident // see the NOTE at end of this section for more detail &quot;proof&quot;: { // the cryptographic signature suite that was used to generate the signature &quot;type&quot;: &quot;RsaSignature2018&quot;, // the date the signature was created &quot;created&quot;: &quot;2017-06-18T21:19:10Z&quot;, // purpose of this proof &quot;proofPurpose&quot;: &quot;assertionMethod&quot;, // the identifier of the public key that can verify the signature &quot;verificationMethod&quot;: &quot;https://example.edu/issuers/keys/1&quot;, // the digital signature value &quot;jws&quot;: &quot;eyJhbGciOiJSUzI1NiIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TCYt5X sITJX1CxPCT8yAV-TVkIEq_PbChOMqsLfRoPsnsgw5WEuts01mq-pQy7UJiN5mgRxD-WUc X16dUEMGlv50aqzpqh4Qktb3rk-BuQy72IFLOqV0G_zS245-kronKb78cPN25DGlcTwLtj PAYuNzVBAh4vGHSrQyHUdBBPM&quot; }} VC的id是一个URI，而VC中的Issuer字段也是一个URI。而Issuer也可能是使用DID来作为其身份的。因此通过VC中的Issuer字段——URI地址得到Issuer的DID，然后从对应的DID文档里就可以得到Issuer的公钥。VI可以用公钥验证对VC的签名，就能验证VC是否Issuer发的。 一些QA Q1：DID系统中哪些东西需要上链，哪些东西需要私下保存？ A1：DID标识符和文档需要上链。目前VC因为包含了用户的隐私信息，需要私下保存。但是即使是私下保存VC，把VC发给平台认证的时候依然会把隐私信息泄露给平台，这个我认为可以使用公钥密码的技术来解决这个问题。 Q2：使用了Web3和DID是否就能自己掌握数据和帐号了？ A1：我认为只是做了改进，自己完全掌握自己的数据和账号是不现实的。 DID中自己的信息依然存储在中心化机构。相比于中心化身份，DID的身份信息只保存在给用户颁发对应身份信息的机构中（比如政府颁发身份证号，银行颁发银行卡号，运营商颁发手机号）。中心化身份的身份信息既保存在颁发身份信息的机构中，也保存在中心化平台中（因为用户注册需要提供相关信息）。如果颁发身份信息的机构可信，那用户就完全具有了对身份数据的控制权。 其次，用户在平台上的行为数据依然全部被这个网站所拥有，但是用户最关键的身份信息不会透露给中心化网站，用户可以使用VC的方式来披露部分身份信息（比如之前的例子，自己是否已满18周岁） DID确实有保护隐私的作用，DID中不存有用户任何和现实身份有关的信息，如果真需要对现实身份信息进行认证，就需要Issuer开具VC。在DID中研究隐私保护其实就是在VC中研究如何保护用户数据隐私 Q3：DID真的能火起来吗？ A3：我对此比较怀疑，从受众角度来讲，这改变了用户使用互联网的习惯，这需要有公司提供软件对Web3和DID技术做足够的封装，帮助用户一键处理麻烦的步骤（包括但不限于申请DID并上链，申请VC并保存到本地等），如果能在保证用户使用体验的情况下保护用户隐私那可能会吸引一部分受众，但是使用区块链就决定了小众且低效；从标准角度来讲，目前并没有能够颁发大家都信服的Web3和DID标准，这会阻挠DID的基础设施建设；从基础设施来讲，这会损害现有中心化平台的利益，对于能从中心化平台牟利的公司来说应该不会积极开发DID的技术以及相关基础设施的建设（比如Web3的密钥管理，协议建设等）。 DID的隐私问题隐私是Web3去中心化和数据主权之后的第三大目标，我认为现有Web3的隐私问题和改进主要有以下几点（从密码学角度来说，可能比较严格）： 较多用户有分享的习惯，在使用平台服务时，他们可能会以DID的名义分享和自己真实身份相关的信息，造成隐私泄露。但这是用户习惯造成的，很难避免。 在使用VC进行验证时有暴露用户身份信息的风险 用户在使用数字钱包进行数据共享时，需要对数据进行细粒度的访问控制 能否在Issuer生成可验证声明时不知道这个可验证声明是什么 密码学天生就是为了隐私保护而生的，目前利用密码学技术来解决DID的隐私问题具有很大的研究空间。比如 各种通用的隐私计算技术：比如使用零知识证明当用户使用VC进行认证时VC不包含用户的隐私信息，但是平台能知道用户有对应的隐私信息能够满足认证要求。 门限加密，身份基加密，属性基加密：为用户使用数字钱包进行数据共享时提供细粒度的访问控制。 群签名、环签名、盲签名：虽然在区块链中还是环签名用的最多，但是Web3.0的DID隐私可能会为群签名和盲签名注入新的活力，比如保证用户使用平台服务的匿名性，但是当用户做出违法操作时可以追踪到具体用户；用户想让Issuer生成VC并且Issuer知道用户想对什么信息生成VC，同时Issuer还能知晓用户申请的VC是合规的。 总结Web3+DID是区块链技术的一种新的应用，能够让用户的身份数据以及一些其他的数据归用户所有，由用户决定是否把自己的数据发送给平台。它具有去中心化，数据主权，隐私保护，验证等比较吸引研究人员的特点。 但是在多数用到了区块链的解决方案上，往往都能用目前比较成熟的技术的另一个方案（除了数字货币本身）。而且区块链往往确实没有特别的优势。只要是这样，由于惰性的存在，区块链的落地就很难进行。而且目前大多数人关注区块链不是因为他有去中心化等花里胡哨的性质，而是他们能炒币赚钱割韭菜，真正适合区块链的应用场景依然有待探索（我对在金融领域的探索依然抱有信心，其他的领域就不一定了）。","link":"/2022/12/28/2022.12.30Web3%20DID/"},{"title":"关于利用AI模型传递密码学公钥等公共参数的方法","text":"这个问题来源于我做的IDEA：AI模型版权认证，我们想利用AI模型中的权重来传递公共参数，实现基于零知识证明的可证明安全的版权认证（当然这个思想除了版权认证，肯定还有一些其他的应用场景）。但是这里有个challenge，由于模型本就可以通过重训练等方式修改权重，攻击者完全可以破坏模型中嵌入的公钥，即使攻击者只破坏了少量的bit，依然会导致传递的公钥不可用。这个challenge如何解决呢？ 具体的方法先卖个关子，等我CCS中了再公布吧","link":"/2023/01/03/2023.1.3%E5%85%B3%E4%BA%8E%E5%88%A9%E7%94%A8AI%E6%A8%A1%E5%9E%8B%E4%BC%A0%E9%80%92%E5%AF%86%E7%A0%81%E5%AD%A6%E5%85%AC%E9%92%A5%E7%AD%89%E5%85%AC%E5%85%B1%E5%8F%82%E6%95%B0%E7%9A%84%E5%8A%9E%E6%B3%95/"},{"title":"从零开始的属性基加密（一）","text":"吹了这么多牛，还是要讲具体技术的，就从我最早接触的属性基加密 (Attribute-based Encryption, ABE) 开始吧，第一篇文章主要讲属性基加密的基本概念，包括属性基加密是什么，需要用到哪些前置知识。 什么是属性基加密相比于传统的加密，属性基加密能提供细粒度的访问控制（由于我主要搞的是CP-ABE，所以接下来只介绍密文策略属性基加密CP-ABE）。属性基加密系统中有四个实体：数据拥有者DO，数据使用者DU，属性权威AA，云服务器CSP。 虽然目前理论研究早在2015年就达到了巅峰，但由于其出色的访问控制功能，目前依然有很多学者研究具有扩展功能的CP-ABE（策略隐藏、可撤销、可更新、可追踪、多权威等）。 前置知识","link":"/2023/01/03/2023.1.4%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B1%9E%E6%80%A7%E5%9F%BA%E5%8A%A0%E5%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/"},{"title":"How to write a paper（MEGUMI版）","text":"随着Submission deadline is now这几个字出现在USENIX Security 2023的投稿网站上，为期一周的论文自我review环节结束了。这一周内，我们以咬文嚼字的方式将论文修改了一遍又一遍，这不仅让论文经历了从破败不堪到还算不错的蜕变，而且极大地提升了我的写作能力（感觉有点像仙侠小说中的闭关修炼）。虽然连续七天每天得改十多小时的论文很辛苦，但是这个经历确实让我收获满满。在我那健忘的大脑还记得时，我想结合这七天改论文的经历以及感想，说一下我目前理解的论文写作方法。 问我为什么8号截稿，但是2月末才发这篇博客？因为学校马原毛概期末考试太难顶了，嗯网络攻防更是个重量级，谁都想不到它会考snort😭。 我将从论文的前置准备、行文思路、结构中的每个章节来讲解如何行文。 论文的前置准备写作逻辑在写论文之前，你需要给你所作的工作定下文章要素，从而梳理写作逻辑，文章要素有如下几个： background：本工作研究领域的背景，有什么需求 motivation：现有解决该需求的方案有什么缺陷 method：你的方案是什么 advantage：你提出的方案有什么好处（这里需要呼应motivation） challenge：为了达到这些好处遇到的难题，你是怎么解决的（和drawback的区别：drawback是现有方案的区别，challenge是你引用新技术解决drawback时会引入的新的问题） contribution：advantage和challenge 把文章要素用一些过渡句串起来串起来形成写作逻辑：background的需求诞生了一些现有方案（background）。但是现有方案有些缺陷导致不能很好地满足需求，本文想要解决填补缺陷（motivation）。为了达到moticvation使用了什么技术，大致是怎么做的（method）。这个method有什么好处（advantage）。但是由于xxx会造成新的问题，我们是xx解决的（challenge）。我们的贡献如下：….（contribution）。 定义符号在写论文之前预先定义符号可以避免符号冲突，节省很多写作时间。定义符号具体工作分为如下两点： 定义字体：哪些字体表示哪些类型，比如粗体 $\\mathbf{a}$ 表示向量，等线 $\\mathtt{A}(\\cdot)$ 表示函数 定义符号：哪些符号表示什么意思 行文思路论文本质上还是八股文，行文思路是比较固定的，按照结构往上面填空就行： 一篇论文大致有如下结构： Abstract：用最简单的话总结论文，包括background，motivation，method，contribution Introduction：Abstract的细化 Related Work：论文中使用的各项技术的现有工作 Preliminary：在引入具体方案之前需要让读者知道的知识 Definition：从背景到motivation再到method的转折段落，用于进一步解决读者的疑惑 Proposed Scheme：论文中提出的具体方案 Analysis：比如证明密码方案的安全性 Experiment：做了什么实验，有哪些结果，对结果进行分析 论文中最重要的是贡献，写作的的核心行文思路需要围绕贡献进行行文：摘要说明贡献，引言总结贡献，相关工作铺垫贡献，先验知识帮助读者理解方案进而理解贡献，问题定义让，具体方案表明贡献，实验和分析证实贡献，总结突出贡献。 Abstract摘要用于说明background，motivation，method，contribution等要素。首先一句话说明研究背景，然后一句话说明motivation（如果有多点motivation就用逗号隔开或者用and等来合并），接着是method，只需要说明用了什么技术（如果用了什么办法可以用很短的句子来概括那也可以加上）。最后是contribution，它的篇幅在abstract中占比最高。对于安全的论文，一般摘要的最后都会说类似的内容：安全分析说明了方案具有足够安全性，实验结果说明方案具有足够的效率，但是任何论文都可以这样说，并不具有论文本身的特色。我们可以将这句话中加上能让读者一下就get到的具有方案特色的关键词，来体现出论文本身的特色。 摘要的篇幅通常在200个单词以内，在有限的篇幅里让读者get到论文大体的全貌是比较困难，很考察英文写作功底。解决这个问题有一套我总结的比较通用的办法，我们可以先通过要素列出一个较长的摘要然后剪枝，具体方法可以参照如下几点： background只留一句 motivation不需要突出前因，着重突出后果（或者说是background的需求），后果尽量用名词性短语描述，然后利用连接词或者从句拼到同一个句子中 如果篇幅依然较长，method只列出最主要的技术，并精简地说有什么advantage 说明解决了什么challenge（这里也可以看情况删去） 实验和安全证明的结果如何 Introduction引言简单来说就是摘要的进一步扩充，读者在读完摘要的时候对方案的background，motivation，method，contribution依然比较模糊，需要引言来详细说明。 写引言坚持萌新友好，正篇文章中贯彻萌新友好（特别是交叉领域，比如AI和密码的交叉，AI的读者不知道密码学的概念，密码学的读者不知道AI的概念），写作的过程中，把自己当作小白，反复读引言，如果你觉得读不明白就需要换一种表达方式。这说着简单实现起来却非常难，首先，引言的目的是让读者进一步明白要素的内容和之间的联系，如果一板一眼地、一句接一句地进行推理可能会造成文章语言啰嗦；其次，引言中需要尽量避免使用过于专业的词汇，如果有就需要对专业词汇做出简单的解释。而在method和contribution中总会出现专业词汇的身影，如果不能正确处理专业词汇的表达就可能造成文章啰嗦逻辑混乱的问题。 引言的行文： 第一段介绍研究背景 第二段介绍现有研究工作以及大致实现流程， 第三段介绍method 第四段分点总结contribution 第一段介绍具体研究场景是什么，用于什么地方，目前有什么问题。 第一段相对比较简单，需要注意的要点只有说服力。我从模型被窃取举例，说明增强说服力的几种方式： 根据目前热点事件来说明：ChatGPT训练需要耗费xx算力和xx时间，如果被窃取是OPENAI的重大损失 引用参考文献：模型被窃取将会是企业的重大损失\\cite{xx} 从理论上来论述：不太推荐这种方法，首先是说服力可能不足，其次是可能会导致第一段篇幅过长 第二段介绍现在有什么方法尝试解决这些问题、他们有什么缺陷（你们的motivation），分为那几点 注意： 其他方案的方法的描述越简短越好，因为这是别人的工作，不是重点。 motivation的描述需要分点为子motivation1，motivation2。通过分点，读者可以通过Introduction很快get到你的motivation有几点，分别是什么。 例子：motivation 现有方案需要可信第三方 现有方案不具有可证明安全性 。。。。 深刻指具体说明motivation分点时，需要适当深入到具体会会造成什么问题。 一个具体的行文例子：虽然目前已经提出了一些解决background的方案，但是现有方案需要可信第三方。本例子就犯了motivation不够深入的问题。 在该例子中，读者（特别是零基础的或者交叉领域的读者）很容易出现一个疑问：为什么需要可信第三方是现有方案的drawback？ 修改一下上述例子：虽然目前已经提出了一些解决background的方案，但是可能遇到xx安全问题，现有方案需要使用可信第三方来避免该问题。在现实，过分的信任可能会导致隐私从第三方泄露。 修改后的例子可以让读者很容易地get到为什么会出现这样的motivation。但是深刻阐述必然会带来篇幅过长，所以说明motivation时需要把握好度，并利用自己地语言功底来对句子进行压缩。 第三段第三段首先要介绍实现了一个怎样的东西，然后和上一段提出的motivation相呼应，来简单阐述论文解决了现有工作的缺陷。 引言的要求对我来说，一个较好的引言有几个要求：说服力，萌新友好，要点鲜明，前后呼应，突出贡献","link":"/2023/02/09/2023.2.9How%20to%20wirte%20a%20paper/"},{"title":"Gensyn-超大规模分布式深度学习的高效计算协议","text":"最近在调研怎么将区块链的算力用于大模型的训练，我除了想到按照算力的消耗用加密货币来激励之外都没什么想法。就在我一筹莫展之际，学长发来了现有的两本比较受欢迎的去中心化模型训练平台的资料，终于让我比较系统地了解了分布式大模型训练的框架和需求。 在Shale和Gensyn这两个大模型训练的协议中，Gensyn更加吸引我，所以我总结了一下Gensyn的笔记 Gensyn的背景 大模型训练需要大到难以供应的算力，比如GPT3的训练用了1000个V100，需要一种方法来集中算力 现有中心化算力出租平台价格较为昂贵，不够经济 ML训练和使用依赖于状态，需要新的的并行化和验证方法 链上直接进行模型训练效率太低 在这样的背景中，设计大规模分布式深度学习的高效计算协议分成了五个挑战： 如何验证深度学习训练工作是否真实且正确地执行 建立完善的市场机制 估算训练所需要的实践 隐私的设计 并行化训练模型的办法 Gensyn的设计功能Gensyn想要利用区块链等技术实现一种去中心化的大规模分布式深度学习的高效计算协议，具有如下功能： 概率学习证明：证明ML训练的正确性和真实性 加密货币激励机制 实体具有如下实体：提交者、解决者、验证者和举报人 提交者：提供要计算的模型训练任务，并按照完成的工作对解决者付费 解决者：执行训练，并生成训练证明 验证者：将非确定性训练过程与确定性线性计算联系起来，判断训练的正确性和真实性 举报人：检查验证者工作并提供质疑 步骤任务提交提交者提供任务和超参数的元数据、模型二进制文件以及可公开访问的数据集。这里的数据集存储在中心化或者去中心化的平台中，比如亚马逊或者IPFS 提交任务时，需要先估计需要的工时。利用类似于ETH中的Gas机制来付费，多的退出来，少的不管了 提交者将较大的计算工作拆分成任务集，异步推送到网络 训练任务进入公共池，解决这选择要执行的任务，该任务从池中移除。使用提交者提供的元数据、模型、数据集执行任务。执行训练任务时，每到一定的检查点就生成学习证明并存储训练过程中的元数据 验证证据任务完成后，解决者向链通知任务完成并公开他的学习证明，验证者从任务池中获取带待验证的任务进行验证证据，根据生成的距离是否在阈值中进行匹配 基于图形的精确性挑战举报人可以重复验证器的工作，检查验证是否正确。如果举报人认为验证执行有误则提出仲裁，如果是真阳性就获取奖励，如果是误报则从奖库中提取。 合约仲裁当验证者受到举报人的挑战时，他们会与链上合约一起进入一个流程，以缩减有争议的操作或输入的位置，最终由链上合约执行最终的基本操作并确定挑战是否合理。 结算如果工作被认为已正确执行并且所有检查均已通过，则求解器和验证器都将根据执行的操作获得奖励。 以下是各方案训练一小时的开销统计，Gensyn在较为便宜的开销下实现了高扩展性 下图是模型训练100轮的时间开销统计，时间开销相比直接训练增加了50% 问题和启发Gensyn存在的问题 没有具体设计模型如何拆分计算任务 训练的真实性依然依赖于可信的举报人，没有实现真正的去信任 缺少验证数据集真实性的措施 直接估算工作量不一定准确，文中说是按照ETH中Gas的办法来按照消耗的算力付费。但是模型训练很看重效率，要是Gas的钱没给够直接导致本次训练任务作废，导致整轮训练等待一小部分任务重新完成很影响效率 需要高效的验证训练证明的方法 一些启发 实体发布任务、接收任务、验证训练、仲裁、转账等日志信息上链 提供的证明是否具有隐私需求，如果有引入零知识证明技术，否则使用常规的AI证明技术 设计购买数据集和算力的机制，用IPFS找免费数据集或者买数据集 闭环的市场，提交者购买算力和数据集训练模型后，可以将模型整合到dApp的一部分。其他用户使用dApp中的模型服务需要支付加密货币 计算外包中实现模型权重和数据集的隐私性（能把方案用起来再继续完善隐私安全）","link":"/2023/03/03/2023.3.3Gensyn/"}],"tags":[{"name":"闲谈","slug":"闲谈","link":"/tags/%E9%97%B2%E8%B0%88/"},{"name":"WEB3","slug":"WEB3","link":"/tags/WEB3/"},{"name":"密码学","slug":"密码学","link":"/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"},{"name":"区块链","slug":"区块链","link":"/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"},{"name":"AI安全","slug":"AI安全","link":"/tags/AI%E5%AE%89%E5%85%A8/"},{"name":"属性基加密","slug":"属性基加密","link":"/tags/%E5%B1%9E%E6%80%A7%E5%9F%BA%E5%8A%A0%E5%AF%86/"},{"name":"论文","slug":"论文","link":"/tags/%E8%AE%BA%E6%96%87/"},{"name":"表达能力","slug":"表达能力","link":"/tags/%E8%A1%A8%E8%BE%BE%E8%83%BD%E5%8A%9B/"},{"name":"AI","slug":"AI","link":"/tags/AI/"}],"categories":[{"name":"生活","slug":"生活","link":"/categories/%E7%94%9F%E6%B4%BB/"},{"name":"技术","slug":"技术","link":"/categories/%E6%8A%80%E6%9C%AF/"},{"name":"科研","slug":"科研","link":"/categories/%E7%A7%91%E7%A0%94/"}],"pages":[{"title":"tags","text":"","link":"/tags/index.html"},{"title":"About","text":"博主叫MEGUMI，该名出自番剧《路人女主的养成方法》的女主角加藤惠（Katou Megumi）。 目前21岁事学生。爱好：ACG，网上冲浪，喝酒，游戏，旅游。 看番目前最喜欢轻百、校园题材，轻百治愈，校园番会想起高中的事情。当然要是其他题材的番质量很高那大概也会去看 由于冲浪强度较高，可能平时也比较喜欢搞抽象 比较喜欢干喝威士忌和以金酒为基酒的鸡尾酒（特别是干马天尼） 平时压力大或者闲下来会打打mc，之前也比较喜欢打极地大乱斗，但是因为传送门和防御塔更新直接被恶心退坑了 喜欢以露营的方式旅游（因《摇曳露营》入的坑，现在还是露营方面的萌新） 目前在从事密码学交叉领域的研究，对密码学的主要研究方向有可证明安全，属性基加密，可搜索加密，零知识证明，安全多方计算。目前致力于将密码技术应用于网络安全、AI安全、区块链安全等领域。 竞赛获奖（成果很捞）： 2022年中国高校计算机大赛网络技术挑战赛国家三等奖 第十五届全国大学生信息安全竞赛作品赛国家三等奖 2022年中国高校计算机大赛网络技术挑战赛西南赛区二等奖 第十五届全国大学生信息安全竞赛作品赛校级二等奖 学术贡献： 设计并实现了首个跨度隐藏的属性基加密算法 设计了首个基于零知识证明的AI模型版权认证方案 博客主要用于分享技术、生活以及一些感想。技术方面主要分享密码相关的技术及其应用，希望能帮到想要了解或者入门密码学的人。 最后，本人目前写作的逻辑能力提升空间极大😭，希望能借助博客提升自己的写作能力。","link":"/about/index.html"},{"title":"categories","text":"","link":"/categories/index.html"}]}